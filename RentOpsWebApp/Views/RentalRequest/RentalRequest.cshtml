@using RentOpsWebApp.ViewModels;
@model RentalRequestViewModel;
@{
	ViewData["Title"] = "RentalRequest";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@{

	//check tempdata for success message
	if (TempData["CreateSuccess"] != null)
	{
		<div class="alert alert-success" role="alert">
			@TempData["CreateSuccess"]
		</div>
	}
	else if (TempData["Rejected"] != null)
	{

		<div class="alert alert-danger" role="alert">
			@TempData["Rejected"]
		</div>

	}

}

<div class="container p-3">
	<h1 class="m-2">Rental Requests</h1>
	<div class="row pt-4">
		<div class="p-3">

			<div class="card border-primary mx-3 my-2">
				<div class="card-header p-3"><h4>Search & Filter Rental Requests</h4></div>
				<div class="card-body p-4">
					<form asp-controller="RentalRequest" asp-action="RentalRequest" method="get">
						<div class="input-group">

							<input type="text" name="SearchRentalRequestId" value="@Context.Request.Query["SearchRentalRequestId"].ToString()" placeholder="Rental Request ID" class="form-control mx-4 col-4 my-2" />

						</div>

						<div class="input-group">
							<select asp-for="SearchRentalRequestStatusId"
							asp-items="@Model.rentalRequestStatuses
                               .Select(i => new SelectListItem { Text = i.RentalRequestStatusTitle, Value = i.RentalRequestStatusId.ToString() })"
							class="form-select  mb-3 mx-4">
								<option value="" disabled selected>Select a Rental Request Status</option>
							</select>
						</div>

						<div class="input-group">
							<select asp-for="SearchEquipmentId"
							asp-items="@Model.equipmentTitle
                               .Select(i => new SelectListItem { Text = i.EquipmentName, Value = i.EquipmentId.ToString() })"
							class="form-select  mb-3 mx-4">
								<option value="" disabled selected>Select an Equipment</option>
							</select>
						</div>


						<div class="align-items-end text-end pe-2">

							<input type="submit" value="Search" class="px-4 btn btn-secondary" />
							<a asp-controller="RentalRequest" asp-action="RentalRequest" class="px-4 btn btn-danger m-2">Clear</a>

						</div>

					</form>

				</div>
			</div>


		</div>

	</div>


	@if (Model.rentalRequests == null || !Model.rentalRequests.Any())
	{
		<div class="alert alert-light text-center" role="alert">
			There are no rental requests to display.
		</div>
	}
	else
	{
		<table class="table table-striped mt-2">
			<thead>
				<tr class="text-center table-primary">
					<th>Rental Request ID</th>
					<th>Timestamp</th>
					<th>Customer ID</th>
					<th>Customer Name</th>
					<th>Start Date</th>
					<th>End Date</th>
					<th>Total Cost</th>
					<th>Equipment Name</th>
					<th>Request Status</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var record in Model.rentalRequests)
				{
					<tr class="text-center">
						<td>@record.RentalRequestId</td>
						<td>@record.RentalRequestTimestamp</td>
						<td>@record.User.UserId</td>
						<td>@record.User.FirstName @record.User.LastName</td>
						<td>@record.RentalStartDate</td>
						<td>@record.RentalReturnDate</td>
						<td>@record.RentalTotalCost</td>
						<td>@record.Equipment.EquipmentName</td>
						<td>@record.RentalRequestStatus.RentalRequestStatusTitle</td>
						<td>
								<a asp-action="Review" asp-route-id="@record.RentalRequestId" class="btn btn-primary">Review Request</a>
					</td>
				</tr>
			}
		</tbody>
		</table>
	}
	</div>