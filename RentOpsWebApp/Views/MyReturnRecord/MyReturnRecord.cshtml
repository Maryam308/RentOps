@using RentOpsWebApp.ViewModels;
@model ReturnRecordViewModel;
@{
	ViewData["Title"] = "MyReturnRecord";
	Layout = "~/Views/Shared/_Layout.cshtml";
}



@{
	if (TempData["CreateSuccess"] != null)
	{
		<div class="alert alert-success" role="alert">
			@TempData["CreateSuccess"].ToString()
		</div>
	}
}

<div class="container p-3">

	<h1 class="m-2">My Return Records</h1>

	<div class="row py-3 px-5">
		


			<div class="card border-primary mx-4 mb-2">
				<div class="card-header p-3"><h4>Search & Filter Return Records</h4></div>
				<div class="card-body p-4">

					<form asp-controller="MyReturnRecord" asp-action="MyReturnRecord" method="get">
						<div class="input-group">

							<input type="text" name="SearchReturnRecordId" value="@Context.Request.Query["SearchReturnRecordId"].ToString()" class="form-control mx-4 col-4 my-2" placeholder="Return Record ID" />

							<input type="text" name="SearchRentalTransactionId" value="@Context.Request.Query["SearchRentalTransactionId"].ToString()" class="form-control mx-4 col-4 my-2" placeholder="Rental Transaction ID" />

						</div>

						<div class="input-group pt-2">

							Actual Return Date:

							<input type="date" class="form-control mb-3 mx-4" name="searchActualReturnDate" value="@Context.Request.Query["searchActualReturnDate"].ToString()">

						</div>

						<div class="input-group">
							<select asp-for="SearchConditionStatus"
									asp-items="@Model.conditionStatuses
                               .Select(i => new SelectListItem { Text = i.ConditionStatusTitle, Value = i.ConditionStatusId.ToString() })"
									class="form-select  mb-3 mx-4">
								<option value="" disabled selected>Select a Return Condition</option>
							</select>
						</div>


						<div class="align-items-end text-end pe-2">
							<input type="submit" value="Search" class="px-4 btn btn-secondary" />
							<a asp-controller="MyReturnRecord" asp-action="MyReturnRecord" class="px-4 btn btn-danger m-2">Clear</a>
						</div>

					</form>

			</div>
			

		</div>

	</div>


	@if (Model.returnRecords == null || !Model.returnRecords.Any())
	{
		<div class="alert alert-light text-center" role="alert">
			There are no return records to display.
		</div>
	}
	else
	{
		<table class="table table-striped">
			<thead>
				<tr class="text-center">
					<th>Return Record ID</th>
					<th>Rental Transaction ID</th>
					<th>Actual Return Date</th>
					<th>Additional Charge</th>
					<th>Late Return Fee</th>
					<th>Document ID</th>
					<th>Return Condition</th>
					<th></th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var record in Model.returnRecords)
				{
					<tr class="text-center">
						<td>@record.ReturnRecordId</td>
						<td>@record.RentalTransactionId</td>
						<td>@record.ActualReturnDate.ToString("yyyy-MM-dd")</td>
						<td>@record.AdditionalCharge</td>
						<td>@record.LateReturnFee</td>
						<td>@record.DocumentId</td>
						<td>@record.ReturnCondition.ConditionStatusTitle</td>
						<td>
							<a asp-action="Edit" asp-route-id="@record.ReturnRecordId" class="btn btn-primary">Edit</a>
							<a asp-action="Delete" asp-route-id="@record.ReturnRecordId" class="btn btn-danger">Delete</a>
						</td>
					</tr>
				}
			</tbody>
		</table>
		
	
	}

	
</div>