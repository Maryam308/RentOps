@using RentOpsWebApp.ViewModels;
@model RentalTransactionViewModel;
@{
	ViewData["Title"] = "MyRentalTransaction";
	Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container p-3">
	<h1 class="m-2">My Rental Transactions</h1>
	<div class="row py-3 px-5">

		<div class="card border-primary me-5 ms-2 my-2">
			<div class="card-header p-3"><h4>Search & Filter Rental Transactions</h4></div>
			<div class="card-body p-4">
				<form asp-controller="MyRentalTransaction" asp-action="MyRentalTransaction" method="get">

					<div class="input-group">

						<input type="text" name="SearchRentalTransactionId" value="@Context.Request.Query["SearchRentalTransactionId"].ToString()" class="form-control mx-4 col-4 my-2" placeholder="Rental Transaction Id" />

						<input type="text" name="SearchRentalRequestId" value="@Context.Request.Query["SearchRentalRequestId"].ToString()" class="form-control mx-4 col-4 my-2" placeholder="Rental Request Id" />

						<input type="text" name="SearchEmployeeId" value="@Context.Request.Query["SearchEmployeeId"].ToString()" class="form-control mx-4 col-4 my-2" placeholder="Employee Id" />

					</div>


					<div class="input-group pt-2">
						Transaction Date:

						<input type="date" class="form-control mb-3 mx-4" name="SearchTransactionDate" value="@Context.Request.Query["SearchTransactionDate"].ToString()">
					</div>

					Equipment Name: <br />
					<div class="input-group">
						<select asp-for="SearchEquipment"
						asp-items="@Model.equipmentTitle
                               .Select(i => new SelectListItem { Text = i.EquipmentName, Value = i.EquipmentId.ToString() })"
						class="form-select mb-3 mx-4">
							<option value="" disabled selected>Select an Equipment</option>
						</select>
					</div>

					Payment Status:<br />
					<div class="input-group">
						<select asp-for="SearchPayment" class="form-select mb-3 mx-4">
							<option value="" disabled selected>Select a Payment Status</option>
							<option value="Paid">Paid</option>
							<option value="Not Paid">Not Paid</option>
						</select>
					</div>

					<div class="align-items-end text-end pe-2">

						<input type="submit" value="Search" class="px-4 btn btn-secondary" />
						<a asp-controller="MyRentalTransaction" asp-action="MyRentalTransaction" class="px-4 btn btn-danger m-2">Clear</a>

					</div>

				</form>


			</div>


		</div>

	</div>

	<h2>Website Rental Requests</h2>
	<br/>

	@{
		var websiteRentalTransactions = Model.rentalTransactions?.Where(record => record.UserId == null && record.RentalRequest != null).ToList();
	}


	@if (websiteRentalTransactions == null || !websiteRentalTransactions.Any())
	{
		<div class="alert alert-light text-center" role="alert">
			There are no rental transactions to display.
		</div>
	}
	else
	{

		<table class="table table-striped">
			<thead class="table-primary">
				<tr class="text-center">
					<th>Rental Transaction ID</th>
					<th>Rental Transaction TimeStamp</th>
					<th>Rental Request ID</th>
					<th>Employee ID</th>
					<th>Employee Name</th>
					<th>Customer ID</th>
					<th>Customer Name</th>
					<th>Rental Fee</th>
					<th>Pickup Date</th>
					<th>Return Date</th>
					<th>Equipment Name</th>
					<th>Payment Status</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var record in Model.rentalTransactions)
				{
					@if (record.UserId == null && record.RentalRequest != null)
					{

						<tr class="text-center">
							<td>@record.RentalTransactionId</td>
							<td>@record.RentalTransactionTimestamp</td>
							<td>@record.RentalRequestId</td>
							<td>@record.EmployeeId</td>
							<td>@record.Employee.FirstName @record.Employee.LastName</td>
							<td>@record.RentalRequest.UserId </td>
							<td>@record.RentalRequest.User.FirstName @record.RentalRequest.User.LastName </td>
							<td>@record.RentalFee</td>
							<td>@record.PickupDate</td>
							<td>@record.ReturnDate</td>
							<td>@record.Equipment.EquipmentName</td>
							<td>
								@(record.PaymentId == null ? "Not Paid" : "Paid")
							</td>
							<td>
								<a asp-action="RentalTransactionDetails" asp-route-id="@record.RentalTransactionId" class="btn btn-primary">View Details</a>

							</td>
						</tr>
					}			}
			</tbody>

		</table>
	
	}
	


	<br />
	<br />
	<h3>External Rental Requests</h3>
	<br />

	@{
		var externalRentalTransactions = Model.rentalTransactions?.Where(record => record.UserId != null && record.RentalRequest == null).ToList();
	}


	@if (externalRentalTransactions == null || !externalRentalTransactions.Any() )
	{
		<div class="alert alert-light text-center" role="alert">
			There are no rental transactions to display.
		</div>
	}
	else
	{
		<table class="table table-striped">
			<thead class="table-primary">
				<tr class="text-center">
					<th>Rental Transaction ID</th>
					<th>Rental Transaction TimeStamp</th>
					<th>Employee ID</th>
					<th>Employee Name</th>
					<th>Customer ID</th>
					<th>Customer Name</th>
					<th>Rental Fee</th>
					<th>Pickup Date</th>
					<th>Return Date</th>
					<th>Equipment Name</th>
					<th>Payment Status</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var record in Model.rentalTransactions)
				{
					@if (record.UserId != null && record.RentalRequest == null)
					{

						<tr class="text-center">
							<td>@record.RentalTransactionId</td>
							<td>@record.RentalTransactionTimestamp</td>
							<td>@record.EmployeeId</td>
							<td>@record.Employee.FirstName @record.Employee.LastName</td>
							<td>@record.UserId </td>
							<td>@record.User.FirstName @record.User.LastName </td>
							<td>@record.RentalFee</td>
							<td>@record.PickupDate</td>
							<td>@record.ReturnDate</td>
							<td>@record.Equipment.EquipmentName</td>
							<td>
								@(record.PaymentId == null ? "Not Paid" : "Paid")
							</td>
							<td>
								<a asp-action="RentalTransactionDetails" asp-route-id="@record.RentalRequestId" class="btn btn-primary">View Details</a>
							</td>
						</tr>
					}			}
			</tbody>
		</table>
	
	
	}

		
</div>
