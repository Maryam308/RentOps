@using RentOpsWebApp.ViewModels;
@model EquipmentViewModel;
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
	
	RentOpsObjects.Model.RentOpsDBContext _context = new RentOpsObjects.Model.RentOpsDBContext();
    @* Fetch the user from the database *@
    var user = _context.Users.FirstOrDefault(u => u.Email == User.Identity.Name);
    string roleName = "";

    if (user != null)
    {
        // Get the role using the RoleId from the user
        roleName = _context.Roles?.FirstOrDefault(r => r.RoleId == user.RoleId)?.RoleTitle ?? "";
    }


}

<div class="container mt-4">
    <!-- Equipment Details -->
    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3>@Model.NewEquipment?.EquipmentName</h3>
        </div>
        <div class="card-body">

            <p><strong>Category:</strong> @Model.NewEquipment?.EquipmentCategory?.EquipmentCategoryTitle</p>
            <p><strong>Status:</strong> @Model.NewEquipment?.ConditionStatus?.ConditionStatusTitle </p>
            <p><strong>Availability:</strong> @Model.NewEquipment?.AvailabilityStatus?.AvailabilityStatusTitle</p>
            <p><strong>Description:</strong> @Model.NewEquipment?.EquipmentDescription"</p>
        </div>
    </div>

    <!-- Feedback Section -->
    <div class="card shadow-sm">
        <div class="card-header bg-success text-white">
            <h4>Customer Feedback</h4>
        </div>
        <div class="card-body">
            @if (Model.EquipmentFeedbacks.Any())
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            @if (roleName == "Administrator" || roleName == "Rental Manager")
                            {
                                <th>Feedback ID</th>
                            <th>Transaction ID</th>
                            <th>Is Hidden</th>
                            
                            }
                            
                            <th>Rating</th>
                            <th>Timestamp</th>
                            <th>Comments</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var feedback in Model.EquipmentFeedbacks)
                        {

                           
                            <tr>
                                
                                

                                <!--if the user is not customer -->
                                @if (roleName == "Administrator" || roleName == "Rental Manager")
                                { 
									<td>@feedback.FeedbackId</td>
                                <td>@feedback.RentalTransactionId</td>
                                <td>
                                    <button type="button"
                                      class="mx-2 btn @(feedback.IsHidden ? "btn-danger" : "btn-success")"
                                      data-bs-toggle="modal"
                                      data-bs-target="#confirmationModal"
                                      data-feedback-id="@feedback.FeedbackId">
                                        @(feedback.IsHidden ? "Show" : "Hide")
                                    </button>
                                </td>

								}

								<td>@feedback.Rating / 5</td>
								<td>@feedback.FeedbackTimestamp.ToString("yyyy-MM-dd HH:mm")</td>
								<td>@feedback.CommentText</td>


                                

                            </tr>
                        }
                    </tbody>
                </table>

                <!-- Place this after the table, outside the foreach loop -->
                <div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="confirmationModalLabel">Confirm Action</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to toggle feedback visibility?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" id="confirmBtn" class="btn btn-primary">Confirm</button>
                            </div>
                        </div>
                    </div>
                </div>


            }
            else
            {
                <p class="text-muted">No feedback available for this equipment.</p>
            }
        </div>
    </div>
</div>
<!-- Include JS and jQuery -->
    <script>
        let selectedFeedbackId = null;

        // Listen for modal show event to get the feedback ID
        var confirmationModal = document.getElementById('confirmationModal');
        confirmationModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            selectedFeedbackId = button.getAttribute('data-feedback-id');
        });

        // Handle confirm button click
        document.getElementById("confirmBtn").onclick = function () {
            if (selectedFeedbackId) {
                fetch(`/Equipment/ToggleFeedbackVisibility/${selectedFeedbackId}`, {
                    method: "POST"
                }).then(() => {
                    location.reload();
                });
            }
        };
    </script>


